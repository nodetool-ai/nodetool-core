name: Test nodetool-core

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Manual trigger

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Build Docker image for tests
        run: |
          # Build from the nodetool-core directory with caching
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --load \
            -t nodetool \
            -f Dockerfile \
            .

          # Move cache to avoid growing indefinitely
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

          # Verify the image was built
          docker images | grep nodetool

          # Test that the nodetool CLI works with --jsonl flag
          docker run --rm --entrypoint nodetool nodetool run --help | grep -q jsonl || \
            (echo "ERROR: Built image does not have --jsonl flag!" && exit 1)

      - name: Run tests (excluding Docker tests)
        run: |
          pytest -v --ignore=tests/workflows/test_docker_job_execution.py

      - name: Run Docker-dependent tests
        run: |
          pytest -v tests/workflows/test_docker_job_execution.py
        env:
          # Ensure tests use the freshly built image
          DOCKER_IMAGE: nodetool
