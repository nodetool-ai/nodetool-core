# syntax=docker/dockerfile:1
FROM ubuntu:22.04 AS base
COPY --from=ghcr.io/astral-sh/uv:0.8.5 /uv /uvx /bin/

# Environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    SHELL=/bin/bash \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    PYTHON_VERSION=3.11 \
    VIRTUAL_ENV=/app/venv

# Install system dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    software-properties-common \
    locales \
    build-essential \
    gcc \
    g++ \
    git \
    wget \
    curl \
    libssl-dev \
    libffi-dev \
    liblzma-dev \
    zlib1g-dev \
    libblas-dev \
    liblapack-dev \
    libopenblas-dev \
    libopencv-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    ffmpeg \
    libsndfile1 \
    libsndfile1-dev \
    libopus-dev \
    libx264-dev \
    libmp3lame-dev \
    libvorbis-dev \
    libxml2-dev \
    libxslt1-dev \
    libsqlite3-dev \
    tesseract-ocr && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen en_US.UTF-8

# Install Python and create virtual environment using uv
RUN uv python install $PYTHON_VERSION
RUN uv venv $VIRTUAL_ENV

# Set up the working directory
WORKDIR /app

# Add project and install it into the venv
ADD . /app/
RUN uv pip install --no-cache-dir nodetool-core

# Install Playwright browser binaries
RUN /app/venv/bin/playwright install

# Ensure venv on PATH
ENV PATH=/app/venv/bin:$PATH
